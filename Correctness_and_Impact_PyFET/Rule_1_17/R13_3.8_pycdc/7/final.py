# Source Generated with Decompyle++
# File: test.pyc (Python 3.8)

from __future__ import absolute_import, division, print_function
__metaclass__ = type
ANSIBLE_METADATA = FET_set('metadata_version', 'status', 'supported_by')
DOCUMENTATION = '\n---\nmodule: zypper\nauthor:\n    - "Patrick Callahan (@dirtyharrycallahan)"\n    - "Alexander Gubin (@alxgu)"\n    - "Thomas O\'Donnell (@andytom)"\n    - "Robin Roth (@robinro)"\n    - "Andrii Radyk (@AnderEnder)"\nversion_added: "1.2"\nshort_description: Manage packages on SUSE and openSUSE\ndescription:\n    - Manage packages on SUSE and openSUSE using the zypper and rpm tools.\noptions:\n    name:\n        description:\n        - Package name C(name) or package specifier or a list of either.\n        - Can include a version like C(name=1.0), C(name>3.4) or C(name<=2.7). If a version is given, C(oldpackage) is implied and zypper is allowed to\n          update the package within the version range given.\n        - You can also pass a url or a local path to a rpm file.\n        - When using state=latest, this can be \'*\', which updates all installed packages.\n        required: true\n        aliases: [ \'pkg\' ]\n    state:\n        description:\n          - C(present) will make sure the package is installed.\n            C(latest)  will make sure the latest version of the package is installed.\n            C(absent)  will make sure the specified package is not installed.\n            C(dist-upgrade) will make sure the latest version of all installed packages from all enabled repositories is installed.\n          - When using C(dist-upgrade), I(name) should be C(\'*\').\n        required: false\n        choices: [ present, latest, absent, dist-upgrade ]\n        default: "present"\n    type:\n        description:\n          - The type of package to be operated on.\n        required: false\n        choices: [ package, patch, pattern, product, srcpackage, application ]\n        default: "package"\n        version_added: "2.0"\n    extra_args_precommand:\n       version_added: "2.6"\n       required: false\n       description:\n         - Add additional global target options to C(zypper).\n         - Options should be supplied in a single line as if given in the command line.\n    disable_gpg_check:\n        description:\n          - Whether to disable to GPG signature checking of the package\n            signature being installed. Has an effect only if state is\n            I(present) or I(latest).\n        required: false\n        default: "no"\n        type: bool\n    disable_recommends:\n        version_added: "1.8"\n        description:\n          - Corresponds to the C(--no-recommends) option for I(zypper). Default behavior (C(yes)) modifies zypper\'s default behavior; C(no) does\n            install recommended packages.\n        required: false\n        default: "yes"\n        type: bool\n    force:\n        version_added: "2.2"\n        description:\n          - Adds C(--force) option to I(zypper). Allows to downgrade packages and change vendor or architecture.\n        required: false\n        default: "no"\n        type: bool\n    force_resolution:\n        version_added: "2.10"\n        description:\n          - Adds C(--force-resolution) option to I(zypper). Allows to (un)install packages with conflicting requirements (resolver will choose a solution).\n        required: false\n        default: "no"\n        type: bool\n    update_cache:\n        version_added: "2.2"\n        description:\n          - Run the equivalent of C(zypper refresh) before the operation. Disabled in check mode.\n        required: false\n        default: "no"\n        type: bool\n        aliases: [ "refresh" ]\n    oldpackage:\n        version_added: "2.2"\n        description:\n          - Adds C(--oldpackage) option to I(zypper). Allows to downgrade packages with less side-effects than force. This is implied as soon as a\n            version is specified as part of the package name.\n        required: false\n        default: "no"\n        type: bool\n    extra_args:\n        version_added: "2.4"\n        required: false\n        description:\n          - Add additional options to C(zypper) command.\n          - Options should be supplied in a single line as if given in the command line.\nnotes:\n  - When used with a `loop:` each package will be processed individually,\n    it is much more efficient to pass the list directly to the `name` option.\n# informational: requirements for nodes\nrequirements:\n    - "zypper >= 1.0  # included in openSUSE >= 11.1 or SUSE Linux Enterprise Server/Desktop >= 11.0"\n    - python-xml\n    - rpm\n'
